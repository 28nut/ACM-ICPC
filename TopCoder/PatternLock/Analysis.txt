If we elimate x continuous blocks in a side, there are 2^(x-1) ways to
to achieve this.
With this idea, we can get a O(n^3) dynamic programming solution.
dp[i][j] stand for the ways when one side left i blocks, and another 
side left j blocks.
Then we can optimize this dp into O(n^2), because 2^(x-1) can be split
into x * x * ... * x * 1.
Use dp[i][j] stand for the ways when spliting j blocks between i and
i+1 groups.
Be careful about the constant.
Time complex: O(n^2).
